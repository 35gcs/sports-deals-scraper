name: Weekly Newsletter Digest

on:
  schedule:
    # Run weekly on Thursdays at 10:00 AM ET (15:00 UTC)
    - cron: '0 15 * * 4'
  workflow_dispatch: # Allow manual triggering

jobs:
  generate-newsletter:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
      
    - name: Install project
      run: poetry install --no-interaction
      
    - name: Install Playwright browsers
      run: poetry run playwright install --with-deps
      
    - name: Download latest deals data
      uses: actions/download-artifact@v3
      with:
        name: deals-data-${{ github.run_number }}
        path: data/
      continue-on-error: true
      
    - name: Create output directory
      run: mkdir -p out
      
    - name: Generate weekly newsletter
      run: |
        WEEK=$(date +%Y-W%U)
        poetry run deals digest --week $WEEK --top-per-sport 8 --youth-only --formats "html,markdown"
      env:
        PYTHONPATH: ${{ github.workspace }}
        
    - name: Upload newsletter
      uses: actions/upload-artifact@v3
      with:
        name: newsletter-${{ github.run_number }}
        path: |
          out/*.html
          out/*.md
        retention-days: 30
        
    - name: Show newsletter stats
      run: |
        echo "Newsletter files generated:"
        ls -la out/
        echo ""
        echo "File sizes:"
        du -h out/*
      continue-on-error: true
      
    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Read newsletter files
          const outDir = 'out';
          const files = fs.readdirSync(outDir);
          
          let comment = '## üìß Weekly Newsletter Generated\n\n';
          comment += `**Week:** ${new Date().toISOString().slice(0, 7)}-W${Math.ceil(new Date().getDate() / 7)}\n\n`;
          
          if (files.length > 0) {
            comment += '**Files generated:**\n';
            files.forEach(file => {
              const filePath = path.join(outDir, file);
              const stats = fs.statSync(filePath);
              comment += `- \`${file}\` (${(stats.size / 1024).toFixed(1)} KB)\n`;
            });
          } else {
            comment += '‚ùå No newsletter files were generated.\n';
          }
          
          comment += '\n---\n';
          comment += '*This comment was automatically generated by the weekly newsletter workflow.*';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
