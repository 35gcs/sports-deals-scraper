name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
      
    - name: Install project
      run: poetry install --no-interaction
      
    - name: Install Playwright browsers
      run: poetry run playwright install --with-deps
      
    - name: Run linting
      run: |
        poetry run ruff check src tests
        poetry run black --check src tests
        poetry run mypy src
      continue-on-error: true
      
    - name: Run tests
      run: |
        poetry run pytest --cov=src --cov-report=xml --cov-report=term-missing
      env:
        PYTHONPATH: ${{ github.workspace }}
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Validate configuration
      run: |
        poetry run deals validate
      env:
        PYTHONPATH: ${{ github.workspace }}
        
    - name: Test CLI commands
      run: |
        poetry run deals sources
        poetry run deals stats
      env:
        PYTHONPATH: ${{ github.workspace }}
      continue-on-error: true
